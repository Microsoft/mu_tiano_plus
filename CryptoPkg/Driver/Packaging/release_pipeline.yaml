## @file
# File BaseCepr-gate-build-job.yml
#
# template file used to build supported packages.
#
# Copyright (c) Microsoft Corporation.
# SPDX-License-Identifier: BSD-2-Clause-Patent
##


# Build step
jobs:

- job: Build_Crypto

  #Use matrix to speed up the build process
  strategy:
    matrix:
      TARGET_OTHER:
        Build.Pkgs: ''
        Build.Targets: 'DEBUG,RELEASE'
      TARGET_FMP_FAT:
        Build.Pkgs: 'FmpDevicePkg,FatPkg'
        Build.Targets: 'DEBUG,RELEASE'
      TARGET_CRYPTO:
        Build.Pkgs: 'CryptoPkg'
        Build.Targets: 'DEBUG,RELEASE'

  workspace:
    clean: all

  pool:
    vmImage: windows-latest

  steps:
  - checkout: self
    clean: true
    # fetchDepth: 1   # MU_CHANGE

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.7.x'
      architecture: 'x64'

  - script: pip install -r pip-requirements.txt --upgrade
    displayName: 'Install/Upgrade pip modules'

  - task: CmdLine@1
    displayName: CI Setup Dependencies
    inputs:
      filename: stuart_ci_setup
      arguments: -c .pytool/CISettings.py -p CryptoPkg --force-git TOOL_CHAIN_TAG=VS2017
    condition: succeeded()

  - task: CmdLine@1
    displayName: Setup Dependencies
    inputs:
      filename: stuart_setup
      arguments: -c .pytool/CISettings.py -p CryptoPkg TOOL_CHAIN_TAG=VS2017
    condition: succeeded()

  - task: CmdLine@1
    displayName: Update Dependencies
    inputs:
      filename: stuart_update
      arguments: -c .pytool/CISettings.py -p CryptoPkg TOOL_CHAIN_TAG=VS2017
    condition: succeeded()

  - task: CmdLine@1
    displayName: Build and Test CryptoPkg
    inputs:
      filename: stuart_ci_build
      arguments: -c .pytool/CISettings.py -p CryptoPkg TOOL_CHAIN_TAG=VS2017 -t $(Build.Targets)
    condition: succeeded()

  # Copy the build logs to the artifact staging directory
  - task: CopyFiles@2
    displayName: "Copy build logs"
    inputs:
      targetFolder: '$(Build.ArtifactStagingDirectory)'
      SourceFolder: 'Build'
      contents: |
        BUILDLOG_*.txt
        BUILDLOG_*.md
        CI_*.txt
        CI_*.md
        CISETUP.txt
        SETUPLOG.txt
        UPDATE_LOG.txt
        PREVALLOG.txt
        TestSuites.xml
        **/BUILD_TOOLS_REPORT.html
        **/OVERRIDELOG.TXT
      flattenFolders: true
    condition: succeededOrFailed()

  # Publish build artifacts to Azure Artifacts/TFS or a file share
  - task: PublishBuildArtifacts@1
    continueOnError: true
    displayName: "Publish build logs"
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'Build Logs $(System.JobName)'
    condition: succeededOrFailed()


- job: FINISHED
  dependsOn: Build_Crypto
  condition: succeeded()
  steps:
  - checkout: none
  - script: |
      echo FINISHED
      sleep 10
    displayName: FINISHED

- job: FAILED
  dependsOn: Build_Crypto
  condition: failed()
  steps:
  - checkout: none
  - script: |
      echo FAILED
      sleep 10
    displayName: FAILED
