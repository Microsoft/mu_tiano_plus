# ****************************************************************************
# AUTOGENERATED BY Packaging\generate_cryptodriver.py
# AUTOGENED AS CryptoDriver.inc.dsc
# DO NOT MODIFY
# GENERATED ON: 2020-03-27 17:51:20.025997

# this is to be included by a platform :)
[Defines]
!ifndef PEI_CRYPTO_SERVICES
 DEFINE PEI_CRYPTO_SERVICES = ALL
!endif
!if $(PEI_CRYPTO_SERVICES) IN "ALL TINY_SHA MINIMAL_SHA_SM3 SMALL_SHA_RSA STANDARD"
 # we don't have a problem
!else
 !error CRYPTO_SERVICES must be set to one of ALL TINY_SHA MINIMAL_SHA_SM3 SMALL_SHA_RSA STANDARD.
!endif

!ifndef DXE_CRYPTO_SERVICES
 DEFINE DXE_CRYPTO_SERVICES = ALL
!endif
!if $(DXE_CRYPTO_SERVICES) IN "ALL TINY_SHA MINIMAL_SHA_SM3 SMALL_SHA_RSA STANDARD"
 # we don't have a problem
!else
 !error CRYPTO_SERVICES must be set to one of ALL TINY_SHA MINIMAL_SHA_SM3 SMALL_SHA_RSA STANDARD.
!endif

!ifndef SMM_CRYPTO_SERVICES
 DEFINE SMM_CRYPTO_SERVICES = ALL
!endif
!if $(SMM_CRYPTO_SERVICES) IN "ALL TINY_SHA MINIMAL_SHA_SM3 SMALL_SHA_RSA STANDARD"
 # we don't have a problem
!else
 !error CRYPTO_SERVICES must be set to one of ALL TINY_SHA MINIMAL_SHA_SM3 SMALL_SHA_RSA STANDARD.
!endif

!if $(PEI_CRYPTO_SERVICES) == TINY_SHA AND $(TARGET) == DEBUG
    [Components.X64, Components.IA32]
      CryptoPkg/Driver/Bin/CryptoDriverBin_TINY_SHA_Pei_DEBUG.inf 
!endif
!if $(PEI_CRYPTO_SERVICES) == TINY_SHA AND $(TARGET) == RELEASE
    [Components.X64, Components.IA32]
      CryptoPkg/Driver/Bin/CryptoDriverBin_TINY_SHA_Pei_RELEASE.inf 
!endif
!if $(DXE_CRYPTO_SERVICES) == TINY_SHA AND $(TARGET) == DEBUG
    [Components.IA32, Components.X64, Components.AARCH64]
      CryptoPkg/Driver/Bin/CryptoDriverBin_TINY_SHA_Dxe_DEBUG.inf 
!endif
!if $(DXE_CRYPTO_SERVICES) == TINY_SHA AND $(TARGET) == RELEASE
    [Components.IA32, Components.X64, Components.AARCH64]
      CryptoPkg/Driver/Bin/CryptoDriverBin_TINY_SHA_Dxe_RELEASE.inf 
!endif
!if $(SMM_CRYPTO_SERVICES) == TINY_SHA AND $(TARGET) == DEBUG
    [Components.X64, Components.IA32]
      CryptoPkg/Driver/Bin/CryptoDriverBin_TINY_SHA_Smm_DEBUG.inf 
!endif
!if $(SMM_CRYPTO_SERVICES) == TINY_SHA AND $(TARGET) == RELEASE
    [Components.X64, Components.IA32]
      CryptoPkg/Driver/Bin/CryptoDriverBin_TINY_SHA_Smm_RELEASE.inf 
!endif
!if $(PEI_CRYPTO_SERVICES) == MINIMAL_SHA_SM3 AND $(TARGET) == DEBUG
    [Components.X64, Components.IA32]
      CryptoPkg/Driver/Bin/CryptoDriverBin_MINIMAL_SHA_SM3_Pei_DEBUG.inf 
!endif
!if $(PEI_CRYPTO_SERVICES) == MINIMAL_SHA_SM3 AND $(TARGET) == RELEASE
    [Components.X64, Components.IA32]
      CryptoPkg/Driver/Bin/CryptoDriverBin_MINIMAL_SHA_SM3_Pei_RELEASE.inf 
!endif
!if $(DXE_CRYPTO_SERVICES) == MINIMAL_SHA_SM3 AND $(TARGET) == DEBUG
    [Components.IA32, Components.X64, Components.AARCH64]
      CryptoPkg/Driver/Bin/CryptoDriverBin_MINIMAL_SHA_SM3_Dxe_DEBUG.inf 
!endif
!if $(DXE_CRYPTO_SERVICES) == MINIMAL_SHA_SM3 AND $(TARGET) == RELEASE
    [Components.IA32, Components.X64, Components.AARCH64]
      CryptoPkg/Driver/Bin/CryptoDriverBin_MINIMAL_SHA_SM3_Dxe_RELEASE.inf 
!endif
!if $(SMM_CRYPTO_SERVICES) == MINIMAL_SHA_SM3 AND $(TARGET) == DEBUG
    [Components.X64, Components.IA32]
      CryptoPkg/Driver/Bin/CryptoDriverBin_MINIMAL_SHA_SM3_Smm_DEBUG.inf 
!endif
!if $(SMM_CRYPTO_SERVICES) == MINIMAL_SHA_SM3 AND $(TARGET) == RELEASE
    [Components.X64, Components.IA32]
      CryptoPkg/Driver/Bin/CryptoDriverBin_MINIMAL_SHA_SM3_Smm_RELEASE.inf 
!endif
!if $(PEI_CRYPTO_SERVICES) == SMALL_SHA_RSA AND $(TARGET) == DEBUG
    [Components.X64, Components.IA32]
      CryptoPkg/Driver/Bin/CryptoDriverBin_SMALL_SHA_RSA_Pei_DEBUG.inf 
!endif
!if $(PEI_CRYPTO_SERVICES) == SMALL_SHA_RSA AND $(TARGET) == RELEASE
    [Components.X64, Components.IA32]
      CryptoPkg/Driver/Bin/CryptoDriverBin_SMALL_SHA_RSA_Pei_RELEASE.inf 
!endif
!if $(DXE_CRYPTO_SERVICES) == SMALL_SHA_RSA AND $(TARGET) == DEBUG
    [Components.IA32, Components.X64, Components.AARCH64]
      CryptoPkg/Driver/Bin/CryptoDriverBin_SMALL_SHA_RSA_Dxe_DEBUG.inf 
!endif
!if $(DXE_CRYPTO_SERVICES) == SMALL_SHA_RSA AND $(TARGET) == RELEASE
    [Components.IA32, Components.X64, Components.AARCH64]
      CryptoPkg/Driver/Bin/CryptoDriverBin_SMALL_SHA_RSA_Dxe_RELEASE.inf 
!endif
!if $(SMM_CRYPTO_SERVICES) == SMALL_SHA_RSA AND $(TARGET) == DEBUG
    [Components.X64, Components.IA32]
      CryptoPkg/Driver/Bin/CryptoDriverBin_SMALL_SHA_RSA_Smm_DEBUG.inf 
!endif
!if $(SMM_CRYPTO_SERVICES) == SMALL_SHA_RSA AND $(TARGET) == RELEASE
    [Components.X64, Components.IA32]
      CryptoPkg/Driver/Bin/CryptoDriverBin_SMALL_SHA_RSA_Smm_RELEASE.inf 
!endif
!if $(PEI_CRYPTO_SERVICES) == STANDARD AND $(TARGET) == DEBUG
    [Components.X64, Components.IA32]
      CryptoPkg/Driver/Bin/CryptoDriverBin_STANDARD_Pei_DEBUG.inf 
!endif
!if $(PEI_CRYPTO_SERVICES) == STANDARD AND $(TARGET) == RELEASE
    [Components.X64, Components.IA32]
      CryptoPkg/Driver/Bin/CryptoDriverBin_STANDARD_Pei_RELEASE.inf 
!endif
!if $(DXE_CRYPTO_SERVICES) == STANDARD AND $(TARGET) == DEBUG
    [Components.IA32, Components.X64, Components.AARCH64]
      CryptoPkg/Driver/Bin/CryptoDriverBin_STANDARD_Dxe_DEBUG.inf 
!endif
!if $(DXE_CRYPTO_SERVICES) == STANDARD AND $(TARGET) == RELEASE
    [Components.IA32, Components.X64, Components.AARCH64]
      CryptoPkg/Driver/Bin/CryptoDriverBin_STANDARD_Dxe_RELEASE.inf 
!endif
!if $(SMM_CRYPTO_SERVICES) == STANDARD AND $(TARGET) == DEBUG
    [Components.X64, Components.IA32]
      CryptoPkg/Driver/Bin/CryptoDriverBin_STANDARD_Smm_DEBUG.inf 
!endif
!if $(SMM_CRYPTO_SERVICES) == STANDARD AND $(TARGET) == RELEASE
    [Components.X64, Components.IA32]
      CryptoPkg/Driver/Bin/CryptoDriverBin_STANDARD_Smm_RELEASE.inf 
!endif